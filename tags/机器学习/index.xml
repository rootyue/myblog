<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>机器学习 on</title><link>https://www.knowlnk.tech/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</link><description>Recent content in 机器学习 on</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://www.knowlnk.tech/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml"/><item><title>机器学习基础作业班 第一周</title><link>https://www.knowlnk.tech/notes/machine_leaning/begin_home_work/%E4%BD%9C%E4%B8%9A%E8%AE%AD%E7%BB%83%E8%90%A5-%E7%AC%AC%E4%B8%80%E5%91%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.knowlnk.tech/notes/machine_leaning/begin_home_work/%E4%BD%9C%E4%B8%9A%E8%AE%AD%E7%BB%83%E8%90%A5-%E7%AC%AC%E4%B8%80%E5%91%A8/</guid><description>理论部分 1. 请你来尝试回答，在机器利⽤鸢尾花数据集对鸢尾花进⾏分类任务的学习过程中，三要素分别对应什么？ T：对给定的单个鸢尾花数据（萼片长度、萼片宽度、花瓣长度、花瓣宽度）预测对应的标签值（类别）
E：150个鸢尾花数据样本（萼片长度、萼片宽度、花瓣长度、花瓣宽度）和对应的标签数据（类别）
P指标：对给定的鸢尾花数据（萼片长度、萼片宽度、花瓣长度、花瓣宽度）预测对应的标签值（类别））的准确度
2. 如何理解“使⽤机器学习解决问题的⽬的是为了获得⼀个复杂函数”这句话？ 用计算机解决问题可以看成是用 已知的信息 进行计算最终可以得到 需要的信息，也就是 F(已知信息) = 需要的信息 所以机器学习的过程可以理解为 可以从 经验E 中让学习系统去调整 函数F(已知信息) = 需要的信息 黑箱中的系数，让 P指标 也就是 函数F(已知信息) 结果的准确度更高</description></item><item><title>机器学习基础作业班 第三周</title><link>https://www.knowlnk.tech/notes/machine_leaning/begin_home_work/%E4%BD%9C%E4%B8%9A%E8%AE%AD%E7%BB%83%E8%90%A5-%E7%AC%AC%E4%B8%89%E5%91%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.knowlnk.tech/notes/machine_leaning/begin_home_work/%E4%BD%9C%E4%B8%9A%E8%AE%AD%E7%BB%83%E8%90%A5-%E7%AC%AC%E4%B8%89%E5%91%A8/</guid><description>这次课我们开始说计算机视觉任务⾥的主流技术：卷积神经⽹络。
 下⾯是⼀张简笔画图⽚，我知道当你看到这样图⽚的时候能够很快的识别图像⾥⾯是⼀只⼤象。
 有⼈认为，那是因为这张图⾥有两只圆圆⼤⼤的⽿朵、⼀个⻓⻓的⿐⼦、粗壮的四肢和细细的尾巴，在你的经验
 ⾥把这四个特征放到⼀起时，是⼤象⽆疑了。
 机器是不是也可以先识别这些局部特征再综合判断图中的动物类别？答案是肯定的。下⾯的问题就变成如何能够表示这些特征以及如何能够识别这些特征。
 为了解决这个问题，先补充两个知识点：补充1. 图⽚在计算机中的表示⽅式。
如上图所示，图⽚在机器⾥由很多像素点构成，每个像素点都是取值在`0-255`的数值。当图⽚像上图⼀样是⿊⽩图⽚(灰度图⽚)时，每个像素点由⼀个数值构成，上图⼤⼩就是`1*18*18`；如果图⽚是彩⾊的，每个像素点通常由三个数值构成，分别表示这个点上红绿蓝的强弱，这就是RGB表示⽅式(R-red\G-green\B-blue)。为了理解的更清楚，我们再看下图这个例⼦：
  彩⾊图⽚中，每个像素点上表示红⾊强弱的数值组合成⼀个矩阵，我们管这个矩阵叫做图⽚的⼀个通道，同理，图⽚的绿⾊蓝⾊也会各⾃构成⼀个矩阵，所以这张彩⾊图⽚具有对应RGB的三个通道，上图⼤⼩就是 3*8*6 ( 通道数*⾼*宽)。注意，在⽹络中图⽚的⼤⼩通常和输⼊层的⼤⼩密切相关。</description></item><item><title>机器学习基础作业班 第二周</title><link>https://www.knowlnk.tech/notes/machine_leaning/begin_home_work/%E4%BD%9C%E4%B8%9A%E8%AE%AD%E7%BB%83%E8%90%A5-%E7%AC%AC%E4%BA%8C%E5%91%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.knowlnk.tech/notes/machine_leaning/begin_home_work/%E4%BD%9C%E4%B8%9A%E8%AE%AD%E7%BB%83%E8%90%A5-%E7%AC%AC%E4%BA%8C%E5%91%A8/</guid><description>一、理论部分 有了机器学习的基础知识, 这一周咱们进入人工神经网络的学习。
(1)人工神经网络? 不是深度学习么? 二者是什么关系? 人工神经网络是一种模仿人脑神经网络的数学模型，由多个节点（人工神经元）互相连接而成，用来对数据之间的复杂关系进行建模。每个节点代表一种特定函数，来自其他节点的信息经过其相应的权重计算后被传递给下一个节点，以此模拟生物神经网络的工作机制。 深度学习是机器学习的一个分支领域，强调从连续的层（layer）中进行学习，这些层对应于越来越有意义的表示。深度学习是从数据中学习表示的一种新方法，现代深度学习通常包含数十个甚至上百个连续的表示层，这些表示层全都是从训练数据中自动学习的。与其他机器学习方法相比，深度学习的重点往往是学习多个层次的数据表示，从而学会更深层次的理解，因此有时也被称为分层表示学习或层级表示学习。 所以深度学习是通过构建多层神经网络来实现对数据的高层次抽象和复杂模式的提取，从而实现对数据的分类，识别和预测。
随着人们对自然界的认识, 仿生学也逐渐发展起来, 我们要学习的人工神经网络就是这其中一个产物。1943年, McCulloch与Pitts从对人脑神经元的认识抽象出下图所示的简单模型, 这就是著名的“M-P神经元模型”。在这个模型中, 神经元接收到来自$n$ 个其它神经元传递过来的输入信号, 这些输入信号通过带权重的连接对输入信号进行 线性变换, 神经元接收到的总输入与神经元的阈值进行比较, 然后通过激活函数处理以产生神经元的输出。</description></item><item><title>机器学习基础作业班 第五周</title><link>https://www.knowlnk.tech/notes/machine_leaning/begin_home_work/%E4%BD%9C%E4%B8%9A%E8%AE%AD%E7%BB%83%E8%90%A5-%E7%AC%AC%E4%BA%94%E5%91%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.knowlnk.tech/notes/machine_leaning/begin_home_work/%E4%BD%9C%E4%B8%9A%E8%AE%AD%E7%BB%83%E8%90%A5-%E7%AC%AC%E4%BA%94%E5%91%A8/</guid><description>我们已经学过卷积神经⽹络以及对应的⼀些经典模型，这次课开始进⼊时序信息处理的模型。其实这两种技术对应了深度学习⾥⾯两个主流领域，计算机视觉(cv)和⾃然语⾔处理(NLP)。
先来思考⼀个问题，为什么经常使⽤卷积神经⽹络来处理图像问题，⽤时序模型来处理⾃然语⾔问题？因为在图像处理过程中，图像空间信息很重要。⼀个像素点和它上下左右周围⼀圈包围的像素点关系密切，⽽全连接神经
⽹络在将图像数据展开的同时会丢掉这些信息，所以卷积核的作⽤就能将⼀个⼩空间范围内的信息⼀起处理，这就很合理了。
然⽽⾃然语⾔⾥⾯的问题更多依赖的是上下⽂（当前⽂字的前⾯和后⾯的若⼲⻓度的⽂字）关系，⽽不是空间关系，就像你做完形填空，你不会着重关注这个空对应的上⼀⾏这个位置的词和下⼀⾏这个位置的词⼀样。
所以我们现在关注的是前后若⼲个时间单位的信息对当前信息的影响，这就是时间序列模型的由来。这次内容我们会学习到经典的简单RNN 和 LSTM 。
可以把时序模型常解决的问题根据输⼊和输出的序列⻓度分为有这样⼏种情况：&amp;quot;1-N&amp;quot;、&amp;quot;N-1&amp;quot;、&amp;quot;N-N&amp;quot;(输⼊输出都为多个但是等⻓)、&amp;quot;N-M&amp;quot;（输⼊输出都为多个但不等⻓）。
①这可以具体对应哪些问题？分别举例说明。 &amp;ldquo;1-N&amp;quot;情况：这种情况下，输入序列长度为1，输出序列长度为N。典型的实际应用如： 输入某个时间点的数据，例如股票价格、天气信息等，预测接下来几个时间点的数据。例如，输入今天的股票价格，预测接下来3天的股票价格。 &amp;ldquo;N-1&amp;quot;情况：这种情况下，输入序列长度为N，输出序列长度为1。典型的实际应用如： 在自然语言处理中，可将一段文本输入模型，输出为该文本的情感分类（如正面、负面）。此时，输入为一段文本（N个词），输出为一个类别。 在时间序列预测中，输入历史数据，预测下一个时间点的值。例如，输入过去一个月的销量数据，预测明天的销量。 &amp;ldquo;N-N&amp;quot;情况：这种情况下，输入序列长度为N，输出序列长度也为N。典型的实际应用如： 机器翻译：将一段源语言文本翻译成目标语言文本。输入为一段源语言文本（N个词），输出为目标语言文本（N个词，源序列与目标序列一一对应）。 序列标注任务：输入一段文本，为每个词分配一个标签。例如，命名实体识别（将人名、地名等标注出来）。输入序列为文本（N个词），输出序列为标签（N个标签，与输入文本一一对应）。 &amp;ldquo;N-M&amp;quot;情况：这种情况下，输入序列长度为N，输出序列长度为M（N和M可以不等长）。典型的实际应用如： 文本摘要任务：根据输入的一段较长的文本，输出一段较短的摘要。此时，输入为一段长文本（N个词），输出为一段摘要（M个词，M小于N）。例如，根据新闻报道生成简短的新闻标题。 对话系统：输入为用户的多个对话轮次（N轮），输出为机器人的多个回复（M轮）。例如，在输入用户提问的过程中，机器人可能会在中间插入一些引导性的问题或补充提醒，从而使得输入和输出序列长度不同。 假如我们现在要从这句话&amp;quot;你知道中国有个教AI的⽼师叫陶卓吗&amp;quot;中识别出⼈名，</description></item><item><title>机器学习基础作业班 第四周</title><link>https://www.knowlnk.tech/notes/machine_leaning/begin_home_work/%E4%BD%9C%E4%B8%9A%E8%AE%AD%E7%BB%83%E8%90%A5-%E7%AC%AC%E5%9B%9B%E5%91%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.knowlnk.tech/notes/machine_leaning/begin_home_work/%E4%BD%9C%E4%B8%9A%E8%AE%AD%E7%BB%83%E8%90%A5-%E7%AC%AC%E5%9B%9B%E5%91%A8/</guid><description>如果在上次的作业中, 你使用PyTorch实现了LeNet网络的定义的话, 你应当已经知道一个网络的定义过程了。把 对应的功能封装成函数后根据你对网络的设计将这些零件拼装在一起, 现在我们会用到全连接层、卷积层、池化 层和激活函数, 之后随着网络设计的复杂, 你会见到更多的零件, 比如dropout、Batch normalization等等。所以 先学理论, 搞清楚这些零件的作用, 以及网络的结构, 用代码实现只是分分钟的事儿。
以下是一个可以用来实现LeNet网络的class, 目的是之后实例出这个网络去跑MNIST数据集。上次有同学说定义 网络不可思议, 你看看是不是我说的零件拼装, 搞定这个以后理论上你可以尝试自己去构建你的网络了。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import torch import torch.</description></item></channel></rss>